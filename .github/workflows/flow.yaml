name: openlane
on:
  workflow_dispatch:

jobs:
  Instalacion:
    runs-on: ubuntu-latest
    steps:
      - name: Repositorio principal
        uses: actions/checkout@v3

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Cache OpenLane and PDK
        if: steps.cache-ol.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        id: cache-ol
        with:
          path: |
            /home/runner/.volare
            ${{ github.workspace }}/OL
          key: cache-key-${{ runner.os }}
          
      - name: Clonar OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          mkdir  ${{ github.workspace }}/OL
          cd ${{ github.workspace }}/OL
          git clone --depth 1 https://github.com/The-OpenROAD-Project/OpenLane.git
          
      - name: Instalar OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/OL/OpenLane
          make
          
      - name: Correr Test
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/OL/OpenLane
          make test
          
      - name: Revisar y guardar version OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          OPENLANE_TAG=$(docker images --format '{{.Repository}} {{.Tag}}' | awk 'NR==1{print $2}')
          OPENLANE_TAG="${OPENLANE_TAG}-amd64"
          echo ${OPENLANE_TAG}
          docker save -o ${{ github.workspace }}/OL/cached_image.tar efabless/openlane:${OPENLANE_TAG}
          
  Run:
    runs-on: ubuntu-latest
    needs: Instalacion
    if: success()
    steps:
      - name: Buscar Archivos de test
        uses: actions/checkout@v3
        
      - name: Restaurar dependencias
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/.volare
            ${{ github.workspace }}/OL
          key: cache-key-${{ runner.os }}
          
      - name: Restaurar docker
        id: restore_docker
        run: |
          docker load -i ${{ github.workspace }}/OL/cached_image.tar
          cp -r ${{ github.workspace }}/src ${{ github.workspace }}/OL/OpenLane/designs/
          OPENLANE_TAG=$(docker images --filter "reference=efabless/openlane" --format '{{.Repository}} {{.Tag}}' | awk 'NR==1{print $2}')
          echo "OPENLANE_IMAGE=efabless/openlane:$OPENLANE_TAG" >> "$GITHUB_OUTPUT"
          
      - name: Run Nueva
        uses: addnab/docker-run-action@v3
        env:
          OPENLANE_IMAGE: ${{ steps.restore_docker.outputs.OPENLANE_IMAGE }}
        with:
          image: ${{ env.OPENLANE_IMAGE }}
          options: --rm -v ${{ github.workspace }}:${{ github.workspace }} -v ${{ github.workspace }}/OL/OpenLane:/openlane -v ${{ github.workspace }}/OL/OpenLane/empty:/openlane/install -v /home/runner/.volare:/home/runner/.volare -e PDK_ROOT=/home/runner/.volare -e PDK=sky130A
          run: |
            ./flow.tcl -overwrite -design src -tag latest
      - name: Subir Resultados
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Reports
          path: ${{ github.workspace }}/OL/OpenLane/designs/src/runs/latest/
      - name: Subir GDS solo
        uses: actions/upload-artifact@v3
        if: success()
        with: 
          name: GDS
          path: ${{ github.workspace }}/OL/OpenLane/designs/src/runs/latest/results/final/gds/
      
      - name: Read CSV
        id: csv
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ github.workspace }}/OL/OpenLane/designs/src/runs/latest/reports/metrics.csv
      - uses: petems/csv-to-md-table-action@master
        id: csv-table-output
        with:
          csvinput: ${{ steps.csv.outputs.content }}
      - run: |
          echo "${{ steps.csv-table-output.outputs.markdown-table }}" >> $GITHUB_STEP_SUMMARY
