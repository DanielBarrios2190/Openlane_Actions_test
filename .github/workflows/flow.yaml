name: openlane
on:
  workflow_dispatch:

jobs:
  Instalacion:
    runs-on: ubuntu-latest
    steps:
      - name: Repositorio principal
        uses: actions/checkout@v3
        with:
          repository: tinytapeout/tt-support-tools
          path: tt
          ref: tt05

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Cache OpenLane and PDK
        if: steps.cache-ol.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        id: cache-ol
        with:
          path: |
            /home/runner/.volare
            ${{ github.workspace }}/OL
          key: cache-key-${{ runner.os }}
      - name: Clonar OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          mkdir  ${{ github.workspace }}/OL
          cd ${{ github.workspace }}/OL
          git clone --depth 1 https://github.com/The-OpenROAD-Project/OpenLane.git
      - name: Instalar OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/OL/OpenLane
          make
      - name: Correr Test
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}/OL/OpenLane
          make test
      - name: Revisar y guardar version OpenLane
        if: steps.cache-ol.outputs.cache-hit != 'true'
        run: |
          docker images
          OPENLANE_TAG=$(docker images --format '{{.Repository}} {{.Tag}}' | awk 'NR==1{print $2}')
          docker save -o ${{ github.workspace }}/OL/cached_image.tar efabless/openlane:${OPENLANE_TAG}
  Run:
    runs-on: ubuntu-latest
    needs: Instalacion
    if: success()
    steps:
      - name: Buscar Archivos de test
        uses: actions/checkout@v3
        
      - name: Restaurar dependencias
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.volare
            ${{ github.workspace }}/OL
          key: cache-key-${{ runner.os }}
          
      - name: Restaurar docker
        run: |
          docker load -i ${{ github.workspace }}/OL/cached_image.tar
          cp -r ${{ github.workspace }}/src ${{ github.workspace }}/OL/OpenLane/designs/
          
      - name: Run Nueva
        uses: addnab/docker-run-action@v3
        with:
          image: efabless/openlane:f4f8dad8273204c2c3a848ca50ebc4e08413b602
          options: --rm -v ${{ github.workspace }}:${{ github.workspace }} -v ${{ github.workspace }}/OL/OpenLane:/openlane -v ${{ github.workspace }}/OL/OpenLane/empty:/openlane/install -v /home/runner/.volare:/home/runner/.volare -e PDK_ROOT=/home/runner/.volare -e PDK=sky130A
          run: |
            #./flow.tcl -design src -tag latest -overwrite
            ./flow.tcl -overwrite -design src -run_path work/runs -tag wokwi
            
      - name: Subir Resultados
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Results
          path: |
            ${{ github.workspace }}/OL/OpenLane/designs/

      - name: Prerequisitos de PNG
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: librsvg2-bin pngquant # librsvg2-bin for rsvg-convert; pngquant for heavy PNG compression.
          version: tt05 # I think naming a version builds a reusable packages cache for that name.
      
      - name: Usar Archivos de tiny tapeout
        uses: actions/checkout@v3
        with:
          repository: tinytapeout/tt-support-tools
          path: tt
          ref: tt05
      - name: Instalar Prerequisitos
        run: |
          pip install appdirs==1.4.4 cairocffi==1.6.0 CairoSVG==2.7.0 certifi==2023.5.7 cffi==1.15.1 charset-normalizer==3.1.0 click==8.1.3 cssselect2==0.7.0 defusedxml==0.7.1 gdstk==0.9.42 gitdb==4.0.10 GitPython==3.1.31 idna==3.4 importlib-resources==5.12.0 mistune==3.0.1 numpy==1.24.3 Pillow==9.5.0 pycparser==2.21 python-frontmatter==1.0.0 pytz==2023.3 PyYAML==6.0 requests==2.31.0 smmap==5.0.0 stripe==5.4.0 tinycss2==1.2.1 urllib3==2.0.3 wasmtime==9.0.0 webencodings==0.5.1 yowasp-runtime==1.22 yowasp-yosys==0.30.0.0.post538 zipp==3.15.0 pre-commit==3.4.0
          pre-commit install

      - name: Inicializar configuraciÃ³n tipo Tiny-Tapeout
        shell: bash
        run: ./tt/tt_tool.py --create-user-config
      
      - name: Render PNG from GDS
        shell: bash
        run: './tt/tt_tool.py --create-png 2>&1 || echo "WARNING: Failed to render PNG preview from GDS; error $?"'

      - name: Upload gds_render (png) artifact
        uses: actions/upload-artifact@v3
        with:
          name: gds_render
          path: 'gds_render.png'

